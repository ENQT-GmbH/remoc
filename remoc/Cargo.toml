[package]
name = "remoc"
description = "ðŸ¦‘ Remote multiplexed objects, channels, observable collections and RPC making remote interactions seamless. Provides multiple remote channels and RPC over TCP, TLS or any other transport."
keywords = ["remote", "channel", "rpc", "stream", "multiplexer"]
categories = ["asynchronous", "network-programming"]

version = { workspace = true }
repository = { workspace = true }
edition = { workspace = true }
rust-version = { workspace = true }
license = { workspace = true }
authors = { workspace = true }


[features]
default = ["full", "default-codec-json"]
full = ["serde", "rch", "rfn", "robj", "robs", "rtc"]
rch = ["async-trait", "serde", "tokio-util/codec", "tokio/io-util"]
rfn = ["rch"]
robj = ["rch"]
robs = ["rch"]
rtc = ["rch", "remoc_macro", "async-trait"]
js = [
    "dep:getrandom",
    "dep:js-sys",
    "dep:web-sys",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "uuid/rng-rand"
]

# Codecs
default-codec-set = []
codec-bincode = ["bincode"]
default-codec-bincode = ["codec-bincode", "default-codec-set"]
default-codec-bincode2 = ["codec-bincode", "default-codec-set"]
codec-ciborium = ["ciborium"]
default-codec-ciborium = ["codec-ciborium", "default-codec-set"]
codec-json = ["serde_json"]
default-codec-json = ["codec-json", "default-codec-set"]
codec-message-pack = ["rmp-serde"]
default-codec-message-pack = ["codec-message-pack", "default-codec-set"]
codec-postcard = ["postcard"]
default-codec-postcard = ["codec-postcard", "default-codec-set"]
full-codecs = [
    "codec-bincode",
    "codec-ciborium",
    "codec-json",
    "codec-message-pack",
    "codec-postcard",
]


[dependencies]
remoc_macro = { version = "=0.15.3", path = "../remoc_macro", optional = true }

futures = { version = "0.3.31", default-features = false, features = ["std"] }
tokio = { version = "1.43", features = ["macros", "rt", "sync", "time"] }
tokio-util = { version = "0.7", features = ["codec"] }
rand = "0.9"
tracing = "0.1.29"
bytes = "1"
byteorder = "1.4"
uuid = { version = "1.15", features = ["serde", "v4"] }
async-trait = { version = "0.1", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }

# Codecs
serde_json = { version = "1.0", optional = true }
bincode = { version = "2.0", default-features = false, features = ["std", "serde"], optional = true }
ciborium = { version = "0.2", optional = true }
rmp-serde = { version = "1.0", optional = true }
postcard = { version = "1.0", features = ["use-std"], optional = true }

# Web support
getrandom = { version = "0.3", features = ["wasm_js"], optional = true }
js-sys = { version = "0.3.72", optional = true }
web-sys = { version = "0.3.72", features = ["Window", "WorkerGlobalScope"], optional = true }
wasm-bindgen = { version = "0.2.95", optional = true }
wasm-bindgen-futures = { version = "0.4.45", optional = true }

tracing-subscriber = { version = "0.3.7", features = ["env-filter"] }

[dev-dependencies]
tracing-subscriber = { version = "0.3.7", features = ["env-filter"] }
tokio = { version = "1.43", features = ["io-util", "rt"] }
wasm-bindgen-test = "0.3.45"

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies]
tokio = { version = "1.43", features = ["net", "rt-multi-thread"] }
tokio-test = "0.4"


[package.metadata.docs.rs]
features = ["full", "full-codecs", "default-codec-json"]
rustdoc-args = ["--cfg", "docsrs"]


[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(wasm_bindgen_unstable_test_coverage)'] }
